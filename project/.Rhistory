#discarding chip 6, 14, 15
qdata.mouse = data.mouse(select= -[,6])
#discarding chip 6, 14, 15
qdata.mouse = data.mouse(select= -c(1,6))
#discarding chip 6, 14, 15
qdata.mouse = select(data.mouse, -6)
#discarding chip 6, 14, 15
qdata.mouse = data.mouse(which=[,1])
#discarding chip 6, 14, 15
qdata.mouse = signature(data.mouse, select(-5))
#discarding chip 6, 14, 15
qdata.mouse = data.mouse[,1:5]
#discarding chip 6, 14, 15
qdata.mouse = data.mouse[,1:5][,7:13][,16:18]
#discarding chip 6, 14, 15
setwd(paste(projectPath,"rawdata","qualityzipped",sep = "/"))
qdata.mouse = ReadAffy()
qdata.mouse@cdfName <- "MOE430A_Mm_ENST"
View(qdata.mouse)
set.seed(234)
vsnqmouse <- vsnrma(qdata.mouse)
meanSdPlot(vsnqmouse, plot = FALSE)$gg + theme(aspect.ratio = 1)
vsn.qmouse = exprs(vsnqmouse)
#after discarding 3 chips
meanSdplot
## Before normalization
par ( las =2)
# Rand zum Beschriften unten , li , oben , re
#mmi = c (1.7 ,0.7 ,1.0477939 ,0.5366749)
#par ( mai = mmi )
boxplot (qdata.mouse ,col = rainbow (150),cex.axis =0.5,main ="Gene expression mouse embryonic development before normalization")
## After normalization
par ( las =2)
boxplot (vsn.qmouse,col = rainbow (150),cex.axis =0.5,main ="Gene expression mouse embryo after normalization")
library(knitr)
knitr::opts_chunk$set(echo = TRUE)
mouse_RNAdeg <- AffyRNAdeg(qdata.mouse)
plotAffyRNAdeg(mouse_RNAdeg)
#There is a crossing line -> trying to find out which one
crossingline= AffyRNAdeg(data.mouse[,7:15])
plotAffyRNAdeg(crossingline)
set.seed(234)
vsnqmouse <- vsnrma(qdata.mouse)
#discarding chip 6, 14, 15
setwd(paste(projectPath,"rawdata","qualityzipped",sep = "/"))
qdata.mouse = ReadAffy()
qdata.mouse@cdfName <- "MOE430A_Mm_ENST"
library(vsn)
set.seed(234)
vsnqmouse <- vsnrma(qdata.mouse)
meanSdPlot(vsnqmouse, plot = FALSE)$gg + theme(aspect.ratio = 1)
library(affy)
library(vsn)
library(AnnotationDbi)
library(moe430ammenstcdf)
library(moe430ammenstprobe)
library(cluster)
library(dplyr)
library(hexbin)
library(pheatmap)
library(rstudioapi)
library(tidyverse)
library(readr)
library(ggplot2)
library(knitr)
library(limma)
library(Rcpp)
projectPath <- dirname(rstudioapi::getSourceEditorContext()$path)
#discarding chip 6, 14, 15
setwd(paste(projectPath,"rawdata","qualityzipped",sep = "/"))
qdata.mouse = ReadAffy()
qdata.mouse@cdfName <- "MOE430A_Mm_ENST"
#after discarding 3 chips
set.seed(234)
vsnqmouse <- vsnrma(qdata.mouse)
meanSdPlot(vsnqmouse, plot = FALSE)$gg + theme(aspect.ratio = 1)
vsn.qmouse = exprs(vsnqmouse)
library(knitr)
knitr::opts_chunk$set(echo = TRUE)
meanSdPlot(data.mouse)
library(knitr)
knitr::opts_chunk$set(echo = TRUE)
library(affy)
library(vsn)
library(AnnotationDbi)
library(moe430ammenstcdf)
library(moe430ammenstprobe)
library(cluster)
library(dplyr)
library(hexbin)
library(pheatmap)
library(rstudioapi)
library(tidyverse)
library(readr)
library(ggplot2)
library(knitr)
library(limma)
library(Rcpp)
projectPath <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(paste(projectPath,"rawdata","zippedmouse",sep = "/"))
data.mouse=ReadAffy()
data.mouse@cdfName <- "MOE430A_Mm_ENST"
meanSdPlot(data.mouse)
meanSdPlot(vsn.mouse)
meanSdPlot(vsnmouse)
library(knitr)
knitr::opts_chunk$set(echo = TRUE)
library(affy)
library(vsn)
library(AnnotationDbi)
library(moe430ammenstcdf)
library(moe430ammenstprobe)
library(cluster)
library(dplyr)
library(hexbin)
library(pheatmap)
library(rstudioapi)
library(tidyverse)
library(readr)
library(ggplot2)
library(knitr)
library(limma)
library(Rcpp)
projectPath <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(paste(projectPath,"rawdata","zippedmouse",sep = "/"))
data.mouse=ReadAffy()
data.mouse@cdfName <- "MOE430A_Mm_ENST"
#discarding chip 6, 14, 15
setwd(paste(projectPath,"rawdata","qualityzipped",sep = "/"))
qdata.mouse = ReadAffy()
qdata.mouse@cdfName <- "MOE430A_Mm_ENST"
for (i in 1:18){
image(data.mouse[,i], col = rainbow (100, start = 0, end = 0.75)[100:1])}
# image(data.mouse[,17], col=rainbow(100, start=0, end=0.75)[100:1])
#Wie speichern?
#file.name = paste(as.character(mouse_microarrays[, "number"])[i],".pdf", sep = "")
#dev.copy2pdf(file = file.name)}
set.seed(234)
vsnmouse <- vsnrma(data.mouse)
meanSdPlot(vsnmouse, plot = FALSE)$gg + theme(aspect.ratio = 1)
vsn.mouse = exprs(vsnmouse)
#after discarding 3 chips
set.seed(234)
vsnqmouse <- vsnrma(qdata.mouse)
meanSdPlot(vsnqmouse, plot = FALSE)$gg + theme(aspect.ratio = 1)
vsn.qmouse = exprs(vsnqmouse)
meanSdPlot(v)
library(knitr)
knitr::opts_chunk$set(echo = TRUE)
library(affy)
library(vsn)
library(AnnotationDbi)
library(moe430ammenstcdf)
library(moe430ammenstprobe)
library(cluster)
library(dplyr)
library(hexbin)
library(pheatmap)
library(rstudioapi)
library(tidyverse)
library(readr)
library(ggplot2)
library(knitr)
library(limma)
library(Rcpp)
projectPath <- dirname(rstudioapi::getSourceEditorContext()$path)
#discarding chip 6, 14, 15
setwd(paste(projectPath,"rawdata","qualityzipped",sep = "/"))
qdata.mouse = ReadAffy()
qdata.mouse@cdfName <- "MOE430A_Mm_ENST"
setwd(paste(projectPath,"rawdata","zippedmouse",sep = "/"))
data.mouse=ReadAffy()
projectPath <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(paste(projectPath,"rawdata","zippedmouse",sep = "/"))
data.mouse=ReadAffy()
#discarding chip 6, 14, 15
setwd(paste(projectPath,"rawdata","qualityzipped",sep = "/"))
qdata.mouse = ReadAffy()
qdata.mouse@cdfName <- "MOE430A_Mm_ENST"
setwd(paste(projectPath,"rawdata","zippedmouse",sep = "/"))
data.mouse=ReadAffy()
data.mouse@cdfName <- "MOE430A_Mm_ENST"
#discarding chip 6, 14, 15
setwd(paste(projectPath,"rawdata","qzipnames",sep = "/"))
qdata.mouse = ReadAffy()
qdata.mouse@cdfName <- "MOE430A_Mm_ENST"
set.seed(234)
vsnqmouse <- vsnrma(qdata.mouse)
meanSdPlot(vsnqmouse, plot = FALSE)$gg + theme(aspect.ratio = 1)
vsn.qmouse = exprs(vsnqmouse)
library(knitr)
knitr::opts_chunk$set(echo = TRUE)
library(affy)
library(vsn)
library(AnnotationDbi)
library(moe430ammenstcdf)
library(moe430ammenstprobe)
library(cluster)
library(dplyr)
library(hexbin)
library(pheatmap)
library(rstudioapi)
library(tidyverse)
library(readr)
library(ggplot2)
library(knitr)
library(limma)
library(Rcpp)
projectPath <- dirname(rstudioapi::getSourceEditorContext()$path)
mouse_RNAdeg <- AffyRNAdeg(qdata.mouse)
plotAffyRNAdeg(mouse_RNAdeg)
plotAffyRNAdeg(mouse_RNAdeg, col = rainbow(15))
plotAffyRNAdeg(mouse_RNAdeg, col = rainbow(15))
mouse_RNAdegb <- AffyRNAdeg(data.mouse)
plotAffyRNAdeg(mouse_RNAdegb)
mouse_RNAdegb <- AffyRNAdeg(data.mouse)
plotAffyRNAdeg(mouse_RNAdegb, col= rainbow(18))
## Before normalization
par ( las =2)
# Rand zum Beschriften unten , li , oben , re
#mmi = c (1.7 ,0.7 ,1.0477939 ,0.5366749)
#par ( mai = mmi )
boxplot (qdata.mouse ,col = rainbow (150),cex.axis =0.5,main ="Gene expression mouse embryonic development before normalization")
par ( las =2)
# Rand zum Beschriften unten , li , oben , re
#mmi = c (1.7 ,0.7 ,1.0477939 ,0.5366749)
#par ( mai = mmi )
boxplot (qdata.mouse ,col = rainbow (150),cex.axis =0.5,main ="Gene expression mouse embryonic development before normalization")
par ( las =2)
# Rand zum Beschriften unten , li , oben , re
#mmi = c (1.7 ,0.7 ,1.0477939 ,0.5366749)
#par ( mai = mmi )
boxplot (qdata.mouse ,col = rainbow (150),cex.axis =0.5,main ="Gene expression mouse embryonic development before normalization")
## Before normalization
par ( las =2)
# Rand zum Beschriften unten , li , oben , re
#mmi = c (1.7 ,0.7 ,1.0477939 ,0.5366749)
#par ( mai = mmi )
boxplot (qdata.mouse ,col = rainbow (150),cex.axis =0.5,main ="Gene expression mouse embryonic development before normalization")
## After normalization
par ( las =2)
boxplot (vsn.qmouse,col = rainbow (150),cex.axis =0.5,main ="Gene expression mouse embryo after normalization")
## Before normalization
par ( las =2)
# Rand zum Beschriften unten , li , oben , re
#mmi = c (1.7 ,0.7 ,1.0477939 ,0.5366749)
#par ( mai = mmi )
boxplot (qdata.mouse ,col = rainbow (150),cex.axis =0.5,main ="Gene expression mouse embryonic development before normalization")
## After normalization
par ( las =2)
boxplot (vsn.qmouse,col = rainbow (150),cex.axis =0.5,main ="Gene expression mouse embryo after normalization")
## Before normalization
par ( las =2)
# Rand zum Beschriften unten , li , oben , re
#mmi = c (1.7 ,0.7 ,1.0477939 ,0.5366749)
#par ( mai = mmi )
boxplot (qdata.mouse ,col = rainbow (150),cex.axis =0.5,main ="Gene expression mouse embryonic development before normalization")
## After normalization
par ( las =2)
boxplot (vsn.qmouse,col = rainbow (150),cex.axis =0.5,main ="Gene expression mouse embryo after normalization")
## Before normalization
par ( las =2)
# Rand zum Beschriften unten , li , oben , re
#mmi = c (1.7 ,0.7 ,1.0477939 ,0.5366749)
#par ( mai = mmi )
boxplot (qdata.mouse ,col = rainbow (150),cex.axis =0.5,main ="Gene expression mouse embryonic development before normalization")
## After normalization
par ( las =2)
boxplot (vsn.qmouse,col = rainbow (150),cex.axis =0.5,main ="Gene expression mouse embryo after normalization")
library(knitr)
knitr::opts_chunk$set(echo = TRUE)
projectPath <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(paste(projectPath,"rawdata","zippedmouse",sep = "/"))
data.mouse=ReadAffy()
data.mouse@cdfName <- "MOE430A_Mm_ENST"
#discarding chip 6, 14, 15
setwd(paste(projectPath,"rawdata","qzipnames",sep = "/"))
qdata.mouse = ReadAffy()
qdata.mouse@cdfName <- "MOE430A_Mm_ENST"
#after discarding 3 chips
set.seed(234)
vsnqmouse <- vsnrma(qdata.mouse)
library(knitr)
knitr::opts_chunk$set(echo = TRUE)
library(affy)
library(vsn)
library(AnnotationDbi)
library(moe430ammenstcdf)
library(moe430ammenstprobe)
library(cluster)
library(dplyr)
library(hexbin)
library(pheatmap)
library(rstudioapi)
library(tidyverse)
library(readr)
library(ggplot2)
library(knitr)
library(limma)
library(Rcpp)
#after discarding 3 chips
set.seed(234)
vsnqmouse <- vsnrma(qdata.mouse)
meanSdPlot(vsnqmouse, plot = FALSE)$gg + theme(aspect.ratio = 1)
vsn.qmouse = exprs(vsnqmouse)
## Before normalization
par ( las =2)
# Rand zum Beschriften unten , li , oben , re
#mmi = c (1.7 ,0.7 ,1.0477939 ,0.5366749)
#par ( mai = mmi )
boxplot (qdata.mouse ,col = rainbow (150),cex.axis =0.5,main ="Gene expression mouse embryonic development before normalization")
## After normalization
par ( las =2)
boxplot (vsn.qmouse,col = rainbow (150),cex.axis =0.5,main ="Gene expression mouse embryo after normalization")
# Rand zum Beschriften unten , li , oben , re
#mmi = c (1.7 ,0.7 ,1.0477939 ,0.5366749)
#par ( mai = mmi )
boxplot (qdata.mouse ,col = rainbow (150),cex.axis = 1,main ="Gene expression mouse embryonic development before normalization")
# Rand zum Beschriften unten , li , oben , re
#mmi = c (1.7 ,0.7 ,1.0477939 ,0.5366749)
#par ( mai = mmi )
boxplot (qdata.mouse ,col = rainbow (150),cex.axis = 0.2,main ="Gene expression mouse embryonic development before normalization")
# Rand zum Beschriften unten , li , oben , re
#mmi = c (1.7 ,0.7 ,1.0477939 ,0.5366749)
#par ( mai = mmi )
boxplot (qdata.mouse ,col = rainbow (150),cex.axis = 0.4,main ="Gene expression mouse embryonic development before normalization")
par ( las =2)
# Rand zum Beschriften unten , li , oben , re
#mmi = c (1.7 ,0.7 ,1.0477939 ,0.5366749)
#par ( mai = mmi )
boxplot (qdata.mouse ,col = rainbow (150),cex.axis = 0.4,main ="Gene expression mouse embryonic development before normalization")
## Before normalization
par(mai = c(0.9,0.9,0.9,0.5))
hist(qdata.mouse, col = rainbow(10), main = "Density function of log intensity mouse embryonic development before normalization")
## After normalization
par(mai = c(0.9,0.9,0.9,0.5))
plot(density(vsn.qmouse), type = "n", xlab = "log Intensity", ylim = c(0, 0.6),main = "Density function of log intensity mouse embryonic development after normalization")
for (i in 1:ncol(vsn.qmouse)){lines(density(vsn.qmouse[,i]), col = rainbow(10)[i])}
par(mai = c(0.9,0.9,0.9,0.5))
plot(density(vsn.mouse), type = "n", xlab = "log Intensity", ylim = c(0, 0.6),main = "Density function of log intensity mouse embryonic development after normalization")
for (i in 1:ncol(vsn.mouse)){lines(density(vsn.qmouse[,i]), col = rainbow(10)[i])}
par(mai = c(0.9,0.9,0.9,0.5))
plot(density(vsn.mouse), type = "n", xlab = "log Intensity", ylim = c(0, 0.6),main = "Density function of log intensity mouse embryonic development after normalization")
par(mai = c(0.9,0.9,0.9,0.5))
hist(qdata.mouse, col = rainbow(10), main = "Density function of log intensity mouse embryonic development before normalization")
par(mai = c(0.9,0.9,0.9,0.5))
plot(density(vsn.qmouse), type = "n", xlab = "log Intensity", ylim = c(0, 0.6),main = "Density function of log intensity mouse embryonic development after normalization")
for (i in 1:ncol(vsn.qmouse)){lines(density(vsn.qmouse[,i]), col = rainbow(10)[i])}
for (i in 1:9) {
for (j in (i+1):10){
plot(vsn.qmouse[,i], vsn.qmouse[,j], pch = ".",
xlab = mouse_microarrays[, "number"][i],
ylab = breast_microarrays[, "number"][j])
abline(0, 1, col = "red")
title(main = paste("Scatterplot of probe",
mouse_microarrays[, "number"] [i],
"and",
mouse_microarrays[, "number"] [i+1],
sep = " ", collapse = NULL))
}
}
## Remove ending from file names
filenames <- rownames(pData(qdata.mouse))
qmouse_microarrays <- substr(filenames, 1, 10)
qmouse_microarrays
for (i in 1:9) {
for (j in (i+1):10){
plot(vsn.qmouse[,i], vsn.qmouse[,j], pch = ".",)
abline(0, 1, col = "red")
for (i in 1:9) {
for (j in (i+1):10){
plot(vsn.qmouse[,i], vsn.qmouse[,j], pch = ".",)
abline(0, 1, col = "red")
scatterplots= for (i in 1:9) {
for (j in (i+1):10){
plot(vsn.qmouse[,i], vsn.qmouse[,j], pch = ".",)
abline(0, 1, col = "red")
scatterplots
view(for (i in 1:9) {
for (j in (i+1):10){
plot(vsn.qmouse[,i], vsn.qmouse[,j], pch = ".",)
abline(0, 1, col = "red"))
for (i in 1:9) {
for (j in (i+1):10){
plot(vsn.qmouse[,i], vsn.qmouse[,j], pch = ".",)
abline(0, 1, col = "red")
}
}
for (i in 1:14) {
for (j in (i+1):15){
plot(vsn.qmouse[,i], vsn.qmouse[,j], pch = ".",)
abline(0, 1, col = "red")
}
}
for (i in 1:14) {
for (j in (i+1):15){
plot(vsn.qmouse[,i], vsn.qmouse[,j], pch = ".",)
abline(0, 1, col = "red")
title(main = paste("Scatterplot of microarrays\n",
colnames(pData(qdata.mouse))[i],
"and",
colnames(pData(qdata.mouse))[j],
sep = " ", collapse = NULL))
}
}
rownames(pData(qdata.mouse))
for (i in 1:14) {
for (j in (i+1):15){
plot(vsn.qmouse[,i], vsn.qmouse[,j], pch = ".",)
abline(0, 1, col = "red")
title(main = paste("Scatterplot of microarrays\n",
rownames(pData(qdata.mouse))[i],
"and",
rownames(pData(qdata.mouse))[j],
sep = " ", collapse = NULL))
}
}
for (i in 1:14) {
for (j in (i+1):15){
plot(vsn.qmouse[,i], vsn.qmouse[,j], pch = ".",
xlab = rownames(pData(qdata.mouse))[i],
ylab = rownames(pData(qdata.mouse))[j])
abline(0, 1, col = "red")
title(main = paste("Scatterplot of microarrays\n",
rownames(pData(qdata.mouse))[i],
"and",
rownames(pData(qdata.mouse))[j],
sep = " ", collapse = NULL))
}
}
plot(vsn.qmouse[,6], vsn.qmouse[,8], pch = ".",
xlab = rownames(pData(qdata.mouse))[6],
ylab = rownames(pData(qdata.mouse))[8])
abline(0, 1, col = "red")
title(main = paste("Scatterplot of microarrays\n",
rownames(pData(qdata.mouse))[6],
"and",
rownames(pData(qdata.mouse))[8],
sep = " ", collapse = NULL))
plot(vsn.qmouse[,7], vsn.qmouse[,9], pch = ".",
xlab = rownames(pData(qdata.mouse))[7],
ylab = rownames(pData(qdata.mouse))[9])
abline(0, 1, col = "red")
title(main = paste("Scatterplot of microarrays\n",
rownames(pData(qdata.mouse))[7],
"and",
rownames(pData(qdata.mouse))[9],
sep = " ", collapse = NULL))
plot(vsn.qmouse[,2], vsn.qmouse[,15], pch = ".",
xlab = rownames(pData(qdata.mouse))[2],
ylab = rownames(pData(qdata.mouse))[15])
abline(0, 1, col = "red")
title(main = paste("Scatterplot of microarrays\n",
rownames(pData(qdata.mouse))[2],
"and",
rownames(pData(qdata.mouse))[15],
sep = " ", collapse = NULL))
plot(vsn.qmouse[,3], vsn.qmouse[,15], pch = ".",
xlab = rownames(pData(qdata.mouse))[3],
ylab = rownames(pData(qdata.mouse))[15])
abline(0, 1, col = "red")
title(main = paste("Scatterplot of microarrays\n",
rownames(pData(qdata.mouse))[3],
"and",
rownames(pData(qdata.mouse))[15],
sep = " ", collapse = NULL))
#discarding chip 6, 14, 15
setwd(paste(projectPath,"rawdata","qualityzipped",sep = "/"))
qdata.mouse = ReadAffy()
qdata.mouse@cdfName <- "MOE430A_Mm_ENST"
## Before normalization
par ( las =2)
# Rand zum Beschriften unten , li , oben , re
#mmi = c (1.7 ,0.7 ,1.0477939 ,0.5366749)
#par ( mai = mmi )
boxplot (qdata.mouse ,col = rainbow (150),cex.axis = 0.4,main ="Gene expression mouse embryonic development before normalization")
## After normalization
par ( las =2)
boxplot (vsn.qmouse,col = rainbow (150),cex.axis =0.5,main ="Gene expression mouse embryo after normalization")
#after discarding 3 chips
set.seed(234)
vsnqmouse <- vsnrma(qdata.mouse)
meanSdPlot(vsnqmouse, plot = FALSE)$gg + theme(aspect.ratio = 1)
vsn.qmouse = exprs(vsnqmouse)
## Before normalization
par ( las =2)
# Rand zum Beschriften unten , li , oben , re
#mmi = c (1.7 ,0.7 ,1.0477939 ,0.5366749)
#par ( mai = mmi )
boxplot (qdata.mouse ,col = rainbow (150),cex.axis = 0.4,main ="Gene expression mouse embryonic development before normalization")
## After normalization
par ( las =2)
boxplot (vsn.qmouse,col = rainbow (150),cex.axis =0.5,main ="Gene expression mouse embryo after normalization")
## Before normalization
par ( las =2)
# Rand zum Beschriften unten , li , oben , re
#mmi = c (1.7 ,0.7 ,1.0477939 ,0.5366749)
#par ( mai = mmi )
boxplot (qdata.mouse ,col = rainbow (150),cex.axis = 0.4,main ="Gene expression mouse embryonic development before normalization")
## After normalization
par ( las =2)
boxplot (vsn.qmouse,col = rainbow (150),cex.axis =0.5,main ="Gene expression mouse embryonic development after normalization")
## Before normalization
#par(mai = c(0.9,0.9,0.9,0.5))
hist(qdata.mouse, col = rainbow(10), main = "Density function of log intensity mouse embryonic development before normalization")
## Before normalization
par(mai = c(0.9,0.9,0.9,0.5))
hist(qdata.mouse, col = rainbow(10), main = "Density function of log intensity mouse ED before normalization")
## After normalization
par(mai = c(0.9,0.9,0.9,0.5))
plot(density(vsn.qmouse), type = "n", xlab = "log Intensity", ylim = c(0, 0.6),main = "Density function of log intensity mouse ED after normalization")
for (i in 1:ncol(vsn.qmouse)){lines(density(vsn.qmouse[,i]), col = rainbow(10)[i])}
