par ( las =2)
# Rand zum Beschriften unten , li , oben , re
#mmi = c (1.7 ,0.7 ,1.0477939 ,0.5366749)
#par ( mai = mmi )
boxplot (data.mouse ,col = rainbow (150),cex.axis =0.5,
main ="Gene expression mouse embryo before normalization")
## Before normalization
par ( las =2)
# Rand zum Beschriften unten , li , oben , re
mmi = c (2.7 ,0.7 ,1.0477939 ,0.5366749)
#par ( mai = mmi )
boxplot (data.mouse ,col = rainbow (150),cex.axis =0.5,
main ="Gene expression mouse embryo before normalization")
## Before normalization
par ( las =2)
# Rand zum Beschriften unten , li , oben , re
mmi = c (2.7 ,1 ,1.0477939 ,0.5366749)
#par ( mai = mmi )
boxplot (data.mouse ,col = rainbow (150),cex.axis =0.5,
main ="Gene expression mouse embryo before normalization")
## Before normalization
par ( las =2)
# Rand zum Beschriften unten , li , oben , re
mmi = c (2.7 ,1 ,0.5366749)
#par ( mai = mmi )
boxplot (data.mouse ,col = rainbow (150),cex.axis =0.5,
main ="Gene expression mouse embryo before normalization")
vsn.mouse=exprs(vsnmouse)
## After normalization
par ( las =2)
boxplot (vsn.mouse,col = rainbow (150),cex.axis =0.5,
main ="Gene expression mouse embryo after normalization")
# ----------------------------------------------------------
# Histogram before and after normalization
# ----------------------------------------------------------
## Before normalization
par(mai = c(0.9,0.9,0.9,0.5))
hist(data.mouse,
col = rainbow(10),
main = "Density function of log intensity mouse embryonic development before normalization")
#setwd(paste(projectPath, "plots" ,sep = "/"))
#dev.copy2pdf(file = "mouse_hist_rawdata.pdf")
## After normalization
par(mai = c(0.9,0.9,0.9,0.5))
plot(density(vsn.mouse),
type = "n", xlab = "log Intensity", ylim = c(0, 0.6),
main = "Density function of log intensity (data set: GSE18290, Xie et al.)\nafter normalization")
for (i in 1:ncol(vsn.mouse)){
lines(density(vsn.mouse[,i]), col = rainbow(10)[i])
}
# ----------------------------------------------------------
# Histogram before and after normalization
# ----------------------------------------------------------
## Before normalization
par(mai = c(0.9,0.9,0.9,0.5))
hist(data.mouse,
col = rainbow(10),
main = "Density function of log intensity mouse embryonic development before normalization")
#setwd(paste(projectPath, "plots" ,sep = "/"))
#dev.copy2pdf(file = "mouse_hist_rawdata.pdf")
## After normalization
par(mai = c(0.9,0.9,0.9,0.5))
plot(density(vsn.mouse),
type = "n", xlab = "log Intensity", ylim = c(0, 0.6),
main = "Density function of log intensity mouse embryonic development after normalization")
for (i in 1:ncol(vsn.mouse)){
lines(density(vsn.mouse[,i]), col = rainbow(10)[i])
}
for (i in 1:18){
image(data.mouse[,i], col = rainbow (100, start = 0, end = 0.75)[100:1])}
for (i in 1:19){
image(data.mouse[,i], col = rainbow (100, start = 0, end = 0.75)[100:1])}
for (i in 1:18){
image(data.mouse[,i])}
image(data.mouse[,17], col=rainbow(100, start=0, end=0.75)[100:1])
for (i in 1:16){
image(data.mouse[,i],col = rainbow (100, start = 0, end = 0.75)[100:1])}
#file.name = paste(as.character(mouse_microarrays[, "number"])[i],".pdf", sep = "")
#dev.copy2pdf(file = file.name)}
# #6 is overexpressed
for (i in 1:16){
image(data.mouse[,i],col = rainbow (100, start = 0, end = 0.75)[100:1])}
#file.name = paste(as.character(mouse_microarrays[, "number"])[i],".pdf", sep = "")
#dev.copy2pdf(file = file.name)}
# #6 is overexpressed
for (i in 1:18){
image(data.mouse[,i],col = rainbow (100, start = 0, end = 0.75)[100:1])}
#file.name = paste(as.character(mouse_microarrays[, "number"])[i],".pdf", sep = "")
#dev.copy2pdf(file = file.name)}
image(data.mouse[,17], col=rainbow(100, start=0, end=0.75)[100:1])
#file.name = paste(as.character(mouse_microarrays[, "number"])[i],".pdf", sep = "")
#dev.copy2pdf(file = file.name)}
for (i in 17:18){
image(data.mouse[,i],col = rainbow (100, start = 0, end = 0.75)[100:1])}
#file.name = paste(as.character(mouse_microarrays[, "number"])[i],".pdf", sep = "")
#dev.copy2pdf(file = file.name)}
image(data.mouse[,17], col=rainbow(100, start=0, end=0.75)[100:1])
for (i in 1:16){
image(data.mouse[,i],col = rainbow (100, start = 0, end = 0.75)[100:1])}
#file.name = paste(as.character(mouse_microarrays[, "number"])[i],".pdf", sep = "")
#dev.copy2pdf(file = file.name)}
image(data.mouse[,17], col=rainbow(100, start=0, end=0.75)[100:1])
# #6 is overexpressed
image(data.mouse[,18], col=rainbow(100, start=0, end=0.75)[100:1])
for (i in 1:16){
image(data.mouse[,i],col = rainbow (100, start = 0, end = 0.75)[100:1])}
#file.name = paste(as.character(mouse_microarrays[, "number"])[i],".pdf", sep = "")
#dev.copy2pdf(file = file.name)}
image(data.mouse[,17], col=rainbow(100, start=0, end=0.75)[100:1])
image(data.mouse[,18], col=rainbow(100, start=0, end=0.75)[100:1])
for (i in 1:17){
image(data.mouse[,i],col = rainbow (100, start = 0, end = 0.75)[100:1])}
#file.name = paste(as.character(mouse_microarrays[, "number"])[i],".pdf", sep = "")
#dev.copy2pdf(file = file.name)}
#image(data.mouse[,17], col=rainbow(100, start=0, end=0.75)[100:1])
#image(data.mouse[,18], col=rainbow(100, start=0, end=0.75)[100:1])
# #6 is overexpressed
for (i in 1:18){
image(data.mouse[,i],col = rainbow (100, start = 0, end = 0.75)[100:1])}
set.seed(234)
vsnmouse <- vsnrma(data.mouse)
meanSdPlot(vsnmouse)
vsn.mouse=exprs(vsnmouse)
pData(data.mouse)
RNAdeg_mouse <- AffyRNAdeg(data.mouse)
View(RNAdeg_mouse)
mouse_RNAdeg <- AffyRNAdeg(data.mouse)
View(mouse_RNAdeg)
mouse_RNAdeg <- AffyRNAdeg(data.mouse)
plotAffyRNAdeg(mpuse_RNAdeg, col = rainbow(10))
plotAffyRNAdeg(mouse_RNAdeg, col = rainbow(10))
plotAffyRNAdeg(mouse_RNAdeg, col = rainbow(18))
plotAffyRNAdeg(mouse_RNAdeg, col = rainbow(25))
plotAffyRNAdeg(mouse_RNAdeg, col = rainbow(18))
plotAffyRNAdeg(mouse_RNAdeg, col = rainbow(18), seq(1:18, by = 1))
axis(1, at= seq(1,18), by=1)
plotAffyRNAdeg(mouse_RNAdeg, col = rainbow(18),axis(1, at= seq(1,18), by=1))
plotAffyRNAdeg(mouse_RNAdeg, col = rainbow(18),axis(1, at= seq(1,18), by=1))
mouse_RNAdeg <- AffyRNAdeg(data.mouse)
plotAffyRNAdeg(mouse_RNAdeg, col = rainbow(18),axis(1, at= seq(1,18), by=1))
plotAffyRNAdeg(mouse_RNAdeg, col = rainbow(18), transform = "shift.only")
setwd("~/Bioinfo/2022-topic-04-team-04/project")
library(knitr)
knitr::opts_chunk$set(echo = TRUE)
library(affy)
library(vsn)
library(AnnotationDbi)
library(moe430ammenstcdf)
library(moe430ammenstprobe)
library(cluster)
library(dplyr)
library(hexbin)
library(pheatmap)
library(rstudioapi)
library(tidyverse)
library(readr)
library(ggplot2)
library(knitr)
library(limma)
library(Rcpp)
projectPath <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd("~/Bioinfo/2022-topic-04-team-04/project")
data.mouse=ReadAffy()
projectPath <- dirname(rstudioapi::getSourceEditorContext()$path)
#setwd("~/Bioinfo/2022-topic-04-team-04/project")
data.mouse=ReadAffy()
projectPath <- dirname(rstudioapi::getSourceEditorContext()$path)
#setwd("~/Bioinfo/2022-topic-04-team-04/project")
data.mouse=ReadAffy()
projectPath <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd("~/Bioinfo/2022-topic-04-team-04/project")
data.mouse=ReadAffy()
setwd("~/Bioinfo/2022-topic-04-team-04/project")
projectPath <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd("~/Bioinfo/2022-topic-04-team-04/project")
data.mouse=ReadAffy()
getwd()
setwd("~/Bioinfo/2022-topic-04-team-04/project")
getwd()
#projectPath <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd("~/Bioinfo/2022-topic-04-team-04/project")
data.mouse=ReadAffy()
#projectPath <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd("~/Bioinfo/2022-topic-04-team-04/project/rawdata/GSE18920file")
knitr::opts_chunk$set(echo = TRUE, cache = TRUE)
options(max.print="120")
opts_chunk$set(echo=TRUE,
cache=TRUE,
prompt=FALSE,
tidy=TRUE,
comment=NA,
message=FALSE,
warning=FALSE)
opts_knit$set(width=120)
opts_knit$set(root.dir  = "~/")
projectPath <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(paste(projectPath,"rawdata","GSE18290_RAW_mouse",sep = "/"))
data.mouse=ReadAffy()
projectPath <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(paste(projectPath,"rawdata","GSE18290_RAW_file",sep = "/"))
setwd("~/Bioinfo/2022-topic-04-team-04/project")
setwd("~/Bioinfo/2022-topic-04-team-04/project")
#projectPath <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(paste(projectpath,"rawdata","GSE18290_RAW_",sep = "/"))
projectpath=setwd("~/Bioinfo/2022-topic-04-team-04/project")
#projectPath <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(paste(projectpath,"rawdata","GSE18290_RAW_",sep = "/"))
projectPath <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(paste(projectPath,"rawdata","zippedmouse",sep = "/"))
data.mouse=ReadAffy()
data.mouse@cdfName <- "MOE430A_Mm_ENST"
knitr::opts_chunk$set(echo = TRUE, cache = TRUE)
options(max.print="120")
opts_chunk$set(echo=TRUE,
cache=TRUE,
prompt=FALSE,
tidy=TRUE,
comment=NA,
message=FALSE,
warning=FALSE)
opts_knit$set(width=120)
opts_knit$set(root.dir  = "~/")
#Install corresponding packages
# Bioconductor
library(knitr)
library(affy)
library(vsn)
library(AnnotationDbi)
library(moe430ammenstcdf)
library(moe430ammenstprobe)
library(hexbin)
library(pheatmap)
library(rstudioapi)
library(tidyverse)
projectPath <- dirname(rstudioapi::getSourceEditorContext()$path)
projectPath <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(paste(projectPath,"rawdata","zippedmouse",sep = "/"))
data.mouse=ReadAffy()
data.mouse@cdfName <- "MOE430A_Mm_ENST"
#Datei ansehen
image(data.mouse[,1], col=rainbow(100, start=0, end=0.75)[100:1])
#dev.copy2pdf(file="C:/Users/amena/OneDrive/Documents/Bioinfo/2022-topic-04-team-04/project/plots/GSM")    is not working (no device to print from)
vsnmouse <- vsnrma(data.mouse)
ReadAffy(vsnmouse)
library(knitr)
knitr::opts_chunk$set(echo = TRUE)
library(affy)
library(vsn)
library(AnnotationDbi)
library(moe430ammenstcdf)
library(moe430ammenstprobe)
library(cluster)
library(dplyr)
library(hexbin)
library(pheatmap)
library(rstudioapi)
library(tidyverse)
library(readr)
library(ggplot2)
library(knitr)
library(limma)
library(Rcpp)
projectPath <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(paste(projectPath,"rawdata","zippedmouse",sep = "/"))
data.mouse=ReadAffy()
data.mouse@cdfName <- "MOE430A_Mm_ENST"
for (i in 1:18){
image(data.mouse[,i], col = rainbow (100, start = 0, end = 0.75)[100:1])}
library(knitr)
knitr::opts_chunk$set(echo = TRUE)
library(affy)
library(vsn)
library(AnnotationDbi)
library(moe430ammenstcdf)
library(moe430ammenstprobe)
library(cluster)
library(dplyr)
library(hexbin)
library(pheatmap)
library(rstudioapi)
library(tidyverse)
library(readr)
library(ggplot2)
library(knitr)
library(limma)
library(Rcpp)
projectPath <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(paste(projectPath,"rawdata","zippedmouse",sep = "/"))
data.mouse=ReadAffy()
data.mouse@cdfName <- "MOE430A_Mm_ENST"
for (i in 1:18){
image(data.mouse[,i], col = rainbow (100, start = 0, end = 0.75)[100:1])}
# image(data.mouse[,17], col=rainbow(100, start=0, end=0.75)[100:1])
#Wie speichern?
#file.name = paste(as.character(mouse_microarrays[, "number"])[i],".pdf", sep = "")
#dev.copy2pdf(file = file.name)}
set.seed(234)
vsnmouse <- vsnrma(data.mouse)
meanSdPlot(vsnmouse)
vsn.mouse = exprs(vsnmouse)
## Before normalization
par ( las =2)
# Rand zum Beschriften unten , li , oben , re
#mmi = c (1.7 ,0.7 ,1.0477939 ,0.5366749)
#par ( mai = mmi )
boxplot (data.mouse ,col = rainbow (150),cex.axis =0.5,main ="Gene expression mouse embryonic development before normalization")
## After normalization
par ( las =2)
boxplot (vsn.mouse,col = rainbow (150),cex.axis =0.5,main ="Gene expression mouse embryo after normalization")
## Before normalization
par(mai = c(0.9,0.9,0.9,0.5))
hist(data.mouse, col = rainbow(10), main = "Density function of log intensity mouse embryonic development before normalization")
## After normalization
par(mai = c(0.9,0.9,0.9,0.5))
plot(density(vsn.mouse), type = "n", xlab = "log Intensity", ylim = c(0, 0.6),main = "Density function of log intensity mouse embryonic development after normalization")
for (i in 1:ncol(vsn.mouse)){lines(density(vsn.mouse[,i]), col = rainbow(10)[i])}
mouse_RNAdeg <- AffyRNAdeg(data.mouse)
plotAffyRNAdeg(mpuse_RNAdeg, col = rainbow(18))
mouse_RNAdeg <- AffyRNAdeg(data.mouse)
plotAffyRNAdeg(mouse_RNAdeg, col = rainbow(18))
meanSdPlot(vsn.mouse, plot = FALSE)$gg + theme(aspect.ratio = 1)
meanSdPlot(vsn.mouse, plot = FALSE)$gg + theme(aspect.ratio = 1)
set.seed(234)
vsnmouse <- vsnrma(data.mouse)
meanSdPlot(vsnmouse)
meanSdPlot(vsn.mouse, plot = FALSE)$gg + theme(aspect.ratio = 1)
vsn.mouse = exprs(vsnmouse)
set.seed(234)
vsnmouse <- vsnrma(data.mouse)
meanSdPlot(vsn.mouse, plot = FALSE)$gg + theme(aspect.ratio = 1)
vsn.mouse = exprs(vsnmouse)
head(exprs(data.mouse))
rownames(exprs(data.mouse))
head(vsn.mouse)
rownames(vsn.mouse)
library(knitr)
knitr::opts_chunk$set(echo = TRUE)
library(affy)
library(vsn)
library(AnnotationDbi)
library(moe430ammenstcdf)
library(moe430ammenstprobe)
library(cluster)
library(dplyr)
library(hexbin)
library(pheatmap)
library(rstudioapi)
library(tidyverse)
library(readr)
library(ggplot2)
library(knitr)
library(limma)
library(Rcpp)
projectPath <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(paste(projectPath,"rawdata","zippedmouse",sep = "/"))
data.mouse=ReadAffy()
data.mouse@cdfName <- "MOE430A_Mm_ENST"
for (i in 1:18){
image(data.mouse[,i], col = rainbow (100, start = 0, end = 0.75)[100:1])}
# image(data.mouse[,17], col=rainbow(100, start=0, end=0.75)[100:1])
#Wie speichern?
#file.name = paste(as.character(mouse_microarrays[, "number"])[i],".pdf", sep = "")
#dev.copy2pdf(file = file.name)}
set.seed(234)
vsnmouse <- vsnrma(data.mouse)
meanSdPlot(vsn.mouse, plot = FALSE)$gg + theme(aspect.ratio = 1)
vsn.mouse = exprs(vsnmouse)
## Before normalization
par ( las =2)
# Rand zum Beschriften unten , li , oben , re
#mmi = c (1.7 ,0.7 ,1.0477939 ,0.5366749)
#par ( mai = mmi )
boxplot (data.mouse ,col = rainbow (150),cex.axis =0.5,main ="Gene expression mouse embryonic development before normalization")
## After normalization
par ( las =2)
boxplot (vsn.mouse,col = rainbow (150),cex.axis =0.5,main ="Gene expression mouse embryo after normalization")
## Before normalization
par(mai = c(0.9,0.9,0.9,0.5))
hist(data.mouse, col = rainbow(10), main = "Density function of log intensity mouse embryonic development before normalization")
## After normalization
par(mai = c(0.9,0.9,0.9,0.5))
plot(density(vsn.mouse), type = "n", xlab = "log Intensity", ylim = c(0, 0.6),main = "Density function of log intensity mouse embryonic development after normalization")
for (i in 1:ncol(vsn.mouse)){lines(density(vsn.mouse[,i]), col = rainbow(10)[i])}
mouse_RNAdeg <- AffyRNAdeg(data.mouse)
plotAffyRNAdeg(mouse_RNAdeg, col = rainbow(18))
mouse_RNAdeg <- AffyRNAdeg(data.mouse)
plotAffyRNAdeg(mouse_RNAdeg[,6], col = rainbow(18))
View(mouse_RNAdeg)
head(mouse_RNAdeg)
mouse_RNAdeg <- AffyRNAdeg(data.mouse)
plotAffyRNAdeg(mouse_RNAdeg[6,], col = rainbow(18))
mouse_RNAdeg <- AffyRNAdeg(data.mouse)
plotAffyRNAdeg(mouse_RNAdeg[6,])
crossingline= AffyRNAdeg(data.mouse[,6])
plotAffyRNAdeg(crossingline)
crossingline= AffyRNAdeg(data.mouse[,6])
plotAffyRNAdeg(crossingline)
crossingline= AffyRNAdeg(data.mouse[,4])
plotAffyRNAdeg(crossingline)
crossingline= AffyRNAdeg(data.mouse[,15])
plotAffyRNAdeg(crossingline)
crossingline= AffyRNAdeg(data.mouse[,14])
plotAffyRNAdeg(crossingline)
crossingline= AffyRNAdeg(data.mouse[,4])
plotAffyRNAdeg(crossingline)
crossingline= AffyRNAdeg(data.mouse[,1])
plotAffyRNAdeg(crossingline)
crossingline= AffyRNAdeg(data.mouse[,2])
plotAffyRNAdeg(crossingline)
crossingline= AffyRNAdeg(data.mouse[,3])
plotAffyRNAdeg(crossingline)
crossingline= AffyRNAdeg(data.mouse[,5])
plotAffyRNAdeg(crossingline)
crossingline= AffyRNAdeg(data.mouse[,7])
plotAffyRNAdeg(crossingline)
crossingline= AffyRNAdeg(data.mouse[,8])
plotAffyRNAdeg(crossingline)
crossingline= AffyRNAdeg(data.mouse[,9])
plotAffyRNAdeg(crossingline)
crossingline= AffyRNAdeg(data.mouse[,10])
plotAffyRNAdeg(crossingline)
crossingline= AffyRNAdeg(data.mouse[,11])
plotAffyRNAdeg(crossingline)
crossingline= AffyRNAdeg(data.mouse[,12])
plotAffyRNAdeg(crossingline)
crossingline= AffyRNAdeg(data.mouse[,13])
plotAffyRNAdeg(crossingline)
plotAffyRNAdeg(crossingline)
crossingline= AffyRNAdeg(data.mouse[,14])
plotAffyRNAdeg(crossingline)
crossingline= AffyRNAdeg(data.mouse[,15])
plotAffyRNAdeg(crossingline)
crossingline= AffyRNAdeg(data.mouse[,17])
plotAffyRNAdeg(crossingline)
crossingline= AffyRNAdeg(data.mouse[,16])
plotAffyRNAdeg(crossingline)
crossingline= AffyRNAdeg(data.mouse[,18])
plotAffyRNAdeg(crossingline)
mouse_RNAdeg <- AffyRNAdeg(data.mouse)
mouse_RNAdeg <- AffyRNAdeg(data.mouse)
plotAffyRNAdeg(mouse_RNAdeg[6,])
plotAffyRNAdeg(mouse_RNAdeg)
crossingline= AffyRNAdeg(data.mouse[,15])
mouse_RNAdeg <- AffyRNAdeg(data.mouse)
plotAffyRNAdeg(mouse_RNAdeg)
crossingline= AffyRNAdeg(data.mouse[,15])
plotAffyRNAdeg(crossingline)
rownames(vsn.mouse)
mouse_RNAdeg <- AffyRNAdeg(data.mouse)
plotAffyRNAdeg(mouse_RNAdeg)
#There is a crossing line -> trying to find out which one
crossingline= AffyRNAdeg(data.mouse[,15][,1][,17])
#There is a crossing line -> trying to find out which one
crossingline= AffyRNAdeg(data.mouse[,15:18])
mouse_RNAdeg <- AffyRNAdeg(data.mouse)
plotAffyRNAdeg(mouse_RNAdeg)
#There is a crossing line -> trying to find out which one
crossingline= AffyRNAdeg(data.mouse[,15:18])
plotAffyRNAdeg(crossingline)
#There is a crossing line -> trying to find out which one
crossingline= AffyRNAdeg(data.mouse[,13:15])
plotAffyRNAdeg(crossingline)
#There is a crossing line -> trying to find out which one
crossingline= AffyRNAdeg(data.mouse[,11:15])
#There is a crossing line -> trying to find out which one
crossingline= AffyRNAdeg(data.mouse[,11:15])
plotAffyRNAdeg(crossingline)
mouse_RNAdeg <- AffyRNAdeg(data.mouse)
plotAffyRNAdeg(mouse_RNAdeg)
#There is a crossing line -> trying to find out which one
crossingline= AffyRNAdeg(data.mouse[,7:15])
plotAffyRNAdeg(crossingline)
set.seed(234)
vsnmouse <- vsnrma(data.mouse)
meanSdPlot(vsnmouse, plot = FALSE)$gg + theme(aspect.ratio = 1)
vsn.mouse = exprs(vsnmouse)
#discarding chip 6, 14, 15
qdata.mouse = data.mouse[-6,-14,-15]
#discarding chip 6, 14, 15
qdata.mouse = data.mouse(select= -[,6])
#discarding chip 6, 14, 15
qdata.mouse = data.mouse(select= -c(1,6))
#discarding chip 6, 14, 15
qdata.mouse = select(data.mouse, -6)
#discarding chip 6, 14, 15
qdata.mouse = data.mouse(which=[,1])
#discarding chip 6, 14, 15
qdata.mouse = signature(data.mouse, select(-5))
#discarding chip 6, 14, 15
qdata.mouse = data.mouse[,1:5]
#discarding chip 6, 14, 15
qdata.mouse = data.mouse[,1:5][,7:13][,16:18]
#discarding chip 6, 14, 15
setwd(paste(projectPath,"rawdata","qualityzipped",sep = "/"))
qdata.mouse = ReadAffy()
qdata.mouse@cdfName <- "MOE430A_Mm_ENST"
View(qdata.mouse)
set.seed(234)
vsnqmouse <- vsnrma(qdata.mouse)
meanSdPlot(vsnqmouse, plot = FALSE)$gg + theme(aspect.ratio = 1)
vsn.qmouse = exprs(vsnqmouse)
#after discarding 3 chips
meanSdplot
## Before normalization
par ( las =2)
# Rand zum Beschriften unten , li , oben , re
#mmi = c (1.7 ,0.7 ,1.0477939 ,0.5366749)
#par ( mai = mmi )
boxplot (qdata.mouse ,col = rainbow (150),cex.axis =0.5,main ="Gene expression mouse embryonic development before normalization")
## After normalization
par ( las =2)
boxplot (vsn.qmouse,col = rainbow (150),cex.axis =0.5,main ="Gene expression mouse embryo after normalization")
