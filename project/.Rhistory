}
}
rownames(pData(qdata.mouse))
for (i in 1:14) {
for (j in (i+1):15){
plot(vsn.qmouse[,i], vsn.qmouse[,j], pch = ".",)
abline(0, 1, col = "red")
title(main = paste("Scatterplot of microarrays\n",
rownames(pData(qdata.mouse))[i],
"and",
rownames(pData(qdata.mouse))[j],
sep = " ", collapse = NULL))
}
}
for (i in 1:14) {
for (j in (i+1):15){
plot(vsn.qmouse[,i], vsn.qmouse[,j], pch = ".",
xlab = rownames(pData(qdata.mouse))[i],
ylab = rownames(pData(qdata.mouse))[j])
abline(0, 1, col = "red")
title(main = paste("Scatterplot of microarrays\n",
rownames(pData(qdata.mouse))[i],
"and",
rownames(pData(qdata.mouse))[j],
sep = " ", collapse = NULL))
}
}
plot(vsn.qmouse[,6], vsn.qmouse[,8], pch = ".",
xlab = rownames(pData(qdata.mouse))[6],
ylab = rownames(pData(qdata.mouse))[8])
abline(0, 1, col = "red")
title(main = paste("Scatterplot of microarrays\n",
rownames(pData(qdata.mouse))[6],
"and",
rownames(pData(qdata.mouse))[8],
sep = " ", collapse = NULL))
plot(vsn.qmouse[,7], vsn.qmouse[,9], pch = ".",
xlab = rownames(pData(qdata.mouse))[7],
ylab = rownames(pData(qdata.mouse))[9])
abline(0, 1, col = "red")
title(main = paste("Scatterplot of microarrays\n",
rownames(pData(qdata.mouse))[7],
"and",
rownames(pData(qdata.mouse))[9],
sep = " ", collapse = NULL))
plot(vsn.qmouse[,2], vsn.qmouse[,15], pch = ".",
xlab = rownames(pData(qdata.mouse))[2],
ylab = rownames(pData(qdata.mouse))[15])
abline(0, 1, col = "red")
title(main = paste("Scatterplot of microarrays\n",
rownames(pData(qdata.mouse))[2],
"and",
rownames(pData(qdata.mouse))[15],
sep = " ", collapse = NULL))
plot(vsn.qmouse[,3], vsn.qmouse[,15], pch = ".",
xlab = rownames(pData(qdata.mouse))[3],
ylab = rownames(pData(qdata.mouse))[15])
abline(0, 1, col = "red")
title(main = paste("Scatterplot of microarrays\n",
rownames(pData(qdata.mouse))[3],
"and",
rownames(pData(qdata.mouse))[15],
sep = " ", collapse = NULL))
#discarding chip 6, 14, 15
setwd(paste(projectPath,"rawdata","qualityzipped",sep = "/"))
qdata.mouse = ReadAffy()
qdata.mouse@cdfName <- "MOE430A_Mm_ENST"
## Before normalization
par ( las =2)
# Rand zum Beschriften unten , li , oben , re
#mmi = c (1.7 ,0.7 ,1.0477939 ,0.5366749)
#par ( mai = mmi )
boxplot (qdata.mouse ,col = rainbow (150),cex.axis = 0.4,main ="Gene expression mouse embryonic development before normalization")
## After normalization
par ( las =2)
boxplot (vsn.qmouse,col = rainbow (150),cex.axis =0.5,main ="Gene expression mouse embryo after normalization")
#after discarding 3 chips
set.seed(234)
vsnqmouse <- vsnrma(qdata.mouse)
meanSdPlot(vsnqmouse, plot = FALSE)$gg + theme(aspect.ratio = 1)
vsn.qmouse = exprs(vsnqmouse)
## Before normalization
par ( las =2)
# Rand zum Beschriften unten , li , oben , re
#mmi = c (1.7 ,0.7 ,1.0477939 ,0.5366749)
#par ( mai = mmi )
boxplot (qdata.mouse ,col = rainbow (150),cex.axis = 0.4,main ="Gene expression mouse embryonic development before normalization")
## After normalization
par ( las =2)
boxplot (vsn.qmouse,col = rainbow (150),cex.axis =0.5,main ="Gene expression mouse embryo after normalization")
## Before normalization
par ( las =2)
# Rand zum Beschriften unten , li , oben , re
#mmi = c (1.7 ,0.7 ,1.0477939 ,0.5366749)
#par ( mai = mmi )
boxplot (qdata.mouse ,col = rainbow (150),cex.axis = 0.4,main ="Gene expression mouse embryonic development before normalization")
## After normalization
par ( las =2)
boxplot (vsn.qmouse,col = rainbow (150),cex.axis =0.5,main ="Gene expression mouse embryonic development after normalization")
## Before normalization
#par(mai = c(0.9,0.9,0.9,0.5))
hist(qdata.mouse, col = rainbow(10), main = "Density function of log intensity mouse embryonic development before normalization")
## Before normalization
par(mai = c(0.9,0.9,0.9,0.5))
hist(qdata.mouse, col = rainbow(10), main = "Density function of log intensity mouse ED before normalization")
## After normalization
par(mai = c(0.9,0.9,0.9,0.5))
plot(density(vsn.qmouse), type = "n", xlab = "log Intensity", ylim = c(0, 0.6),main = "Density function of log intensity mouse ED after normalization")
for (i in 1:ncol(vsn.qmouse)){lines(density(vsn.qmouse[,i]), col = rainbow(10)[i])}
library(pheatmap)
pheatmap(exp1_unique [1:50,])
#download data and ID conversion
options(stringsAsFactors = F)
Sys.setenv("VROOM_CONNECTION_SIZE"=131702*600)
#library(GEOquery)
library(limma)
library(affy)
#gse<-getGEO("GSE18290",destdir = ".",
#            getGPL = T,
#           AnnotGPL =T)
gse =
gse[[1]]
gse[[2]]
gse[[3]]
exp1<-exprs(gse[[1]])
exp2<-exprs(gse[[2]])
exp3<-exprs(gse[[3]])
Clinfo1<-pData(gse[[1]])
group<-c(rep("aoocyte",2), rep("bonecell",2), rep("ctwocell",2), rep("dfourcell",2),
rep("eightcell",2), rep("fsixteencell",2),rep("gmorula",2), rep("hblast",2))
GPL1<-fData(gse[[1]])
gpl1<-GPL1[,c(1,3)]
gpl1$`Gene symbol`<-data.frame(sapply(gpl1$`Gene symbol`,
function(x)unlist(strsplit(x, "///"))[1]),
stringsAsFactors = F) [,1]
exp1<-as.data.frame(exp1)
exp1$ID<-rownames(exp1)
exp1_symbol<-merge(exp1,gpl1,by = "ID")
exp1_symbol<-na.omit(exp1_symbol)
table(duplicated(exp1_symbol$`Gene symbol`))
exp1_unique<-avereps(exp1_symbol[,-c(1,ncol(exp1_symbol))], ID = exp1_symbol$`Gene symbol`)
table(duplicated(rownames(exp1_unique)))
save(exp1, exp1_symbol,exp1_unique, GPL1, gpl1, gse, group, Clinfo1,file = "GSE18290_GPL2112.Rdata")
load("GSE18290_GPL2112.Rdata")
boxplot(exp1_unique)
options (stringsAsFactors = F)
library(limma)
# expression matrix, design matrix, contrast matrix
# design matrix
design1<-model.matrix(~0+factor(group))
colnames(design1)<-levels(factor(group))
rownames(design1)<-colnames(exp1_unique)
#contrast matrix"
contrast.matrix<-makeContrasts(blast-onecell, blast-twocell, blast-fourcell, blast-eightcell,
blast-sixteencell, blast-morula, levels = design1 )
contrast.matrix
# limma DEG
fit<-lmFit(exp1_unique, design1)
fit2<-contrasts.fit(fit,contrast.matrix)
fit2<-eBayes(fit2)
options(digits = 4)
DEG<-topTable(fit2,coef = 1, n =Inf)
DEG$group<-ifelse(DEG$P.Value>0.01,"no change",
ifelse(DEG$logFC>2.5,"up",
ifelse(DEG$logFC< -2.5, "down", "no change")))
table(DEG$group)
DEG$gene<-rownames(DEG)
#single gene expression
library(ggplot2)
library(ggpubr)
datatest<-data.frame(gene=exp1_unique["TCF7",],group=group)
ggplot(data=datatest, aes(x=group, y=gene, fill=group))+geom_boxplot()+
geom_point()+stat_compare_means()
#volcano plot
library(ggplot2)
#basic volcano plot
DEG$p<- -log10(DEG$P.Value)
ggplot(data=DEG,aes(x=logFC,y=p, color=group))+geom_point()
#advanced volcano plot
library(ggrepel)
ggplot(data=DEG,aes(x=logFC,y=p, color=group))+
geom_point(data=DEG[DEG$P.Value<0.01&abs(DEG$logFC)>1000,],size=3)+
geom_point(data=DEG[DEG$P.Value>0.01&abs(DEG$logFC)<1000,],size=2)+
scale_color_manual(values = c("#7bccc4","grey65","#fe9929"))+
xlab("log2(FoldChange)")+ylab("-log10(P.value)")+
geom_text_repel(data = DEG[DEG$P.Value<0.001&abs(DEG$logFC>7500),],
aes(label = gene),
size = 4)
#heatmap
library(pheatmap)
pheatmap(exp1_unique [1:50,])
library(knitr)
knitr::opts_chunk$set(echo = TRUE)
pheatmap(data.mouse)
gse[[1]]
#download data and ID conversion
options(stringsAsFactors = F)
Sys.setenv("VROOM_CONNECTION_SIZE"=131702*600)
library(GEOquery)
library(limma)
library(affy)
gse<-getGEO("GSE18290",destdir = ".",
getGPL = T,
AnnotGPL =T)
gse =
gse[[1]]
gse[[2]]
gse[[3]]
exp1<-exprs(gse[[1]])
exp2<-exprs(gse[[2]])
exp3<-exprs(gse[[3]])
Clinfo1<-pData(gse[[1]])
group<-c(rep("aoocyte",2), rep("bonecell",2), rep("ctwocell",2), rep("dfourcell",2),
rep("eightcell",2), rep("fsixteencell",2),rep("gmorula",2), rep("hblast",2))
GPL1<-fData(gse[[1]])
gpl1<-GPL1[,c(1,3)]
gpl1$`Gene symbol`<-data.frame(sapply(gpl1$`Gene symbol`,
function(x)unlist(strsplit(x, "///"))[1]),
stringsAsFactors = F) [,1]
exp1<-as.data.frame(exp1)
exp1$ID<-rownames(exp1)
exp1_symbol<-merge(exp1,gpl1,by = "ID")
exp1_symbol<-na.omit(exp1_symbol)
table(duplicated(exp1_symbol$`Gene symbol`))
exp1_unique<-avereps(exp1_symbol[,-c(1,ncol(exp1_symbol))], ID = exp1_symbol$`Gene symbol`)
table(duplicated(rownames(exp1_unique)))
save(exp1, exp1_symbol,exp1_unique, GPL1, gpl1, gse, group, Clinfo1,file = "GSE18290_GPL2112.Rdata")
load("GSE18290_GPL2112.Rdata")
boxplot(exp1_unique)
options (stringsAsFactors = F)
library(limma)
# expression matrix, design matrix, contrast matrix
# design matrix
design1<-model.matrix(~0+factor(group))
colnames(design1)<-levels(factor(group))
rownames(design1)<-colnames(exp1_unique)
#contrast matrix"
contrast.matrix<-makeContrasts(blast-onecell, blast-twocell, blast-fourcell, blast-eightcell,
blast-sixteencell, blast-morula, levels = design1 )
contrast.matrix
# limma DEG
fit<-lmFit(exp1_unique, design1)
fit2<-contrasts.fit(fit,contrast.matrix)
fit2<-eBayes(fit2)
options(digits = 4)
DEG<-topTable(fit2,coef = 1, n =Inf)
DEG$group<-ifelse(DEG$P.Value>0.01,"no change",
ifelse(DEG$logFC>2.5,"up",
ifelse(DEG$logFC< -2.5, "down", "no change")))
table(DEG$group)
DEG$gene<-rownames(DEG)
#single gene expression
library(ggplot2)
library(ggpubr)
datatest<-data.frame(gene=exp1_unique["TCF7",],group=group)
ggplot(data=datatest, aes(x=group, y=gene, fill=group))+geom_boxplot()+
geom_point()+stat_compare_means()
#volcano plot
library(ggplot2)
#basic volcano plot
DEG$p<- -log10(DEG$P.Value)
ggplot(data=DEG,aes(x=logFC,y=p, color=group))+geom_point()
#advanced volcano plot
library(ggrepel)
ggplot(data=DEG,aes(x=logFC,y=p, color=group))+
geom_point(data=DEG[DEG$P.Value<0.01&abs(DEG$logFC)>1000,],size=3)+
geom_point(data=DEG[DEG$P.Value>0.01&abs(DEG$logFC)<1000,],size=2)+
scale_color_manual(values = c("#7bccc4","grey65","#fe9929"))+
xlab("log2(FoldChange)")+ylab("-log10(P.value)")+
geom_text_repel(data = DEG[DEG$P.Value<0.001&abs(DEG$logFC>7500),],
aes(label = gene),
size = 4)
#heatmap
library(pheatmap)
pheatmap(exp1_unique [1:50,])
express_data.mouse= exprs(express_data.mouse)
express_data.mouse= exprs(data.mouse)
ex=na.omit(vsn.qmouse)
plotSA(lmFit(ex), main="Mean variance trend, GSE18290")
gset <- getGEO("GSE18290", GSEMatrix =TRUE, getGPL=FALSE)
library(GEOquery)
library(limma)
install.packages("GEOquery")
BiocManager::install("GEOquery")
options(stringsAsFactors = F)
Sys.setenv("VROOM_CONNECTION_SIZE"=131702*600)
library(GEOquery)
library(limma)
library(affy)
gse<-getGEO("GSE18290",destdir = ".",
getGPL = T,
AnnotGPL =T)
gse[[1]]
gse[[3]]
gse[[2]]
gse[[2]]
exp2<-exprs(gse[[2]])
Clinfo1<-pData(gse[[]])
group<-c(rep("aoocyte",2), rep("bonecell",2), rep("ctwocell",2), rep("dfourcell",2),
rep("eightcell",2), rep("fsixteencell",2),rep("gmorula",2), rep("hblast",2))
View(exp2)
GPL1<-fData(gse[[2]])
View(GPL1)
gpl1<-GPL1[,c(1,3)]
View(gpl1)
gpl1$`Gene symbol`<-data.frame(sapply(gpl1$`Gene symbol`,
function(x)unlist(strsplit(x, "///"))[1]),
stringsAsFactors = F) [,1]
View(gpl1)
gpl1$`Gene symbol`<-data.frame(sapply(gpl1$`Gene symbol`,
function(x)unlist(strsplit(x, "///"))[1]),
stringsAsFactors = F) [,1]
gpl1$"Gene symbol" <-data.frame(sapply(gpl1$"Gene symbol", function(x)unlist(strsplit(x, "///"))[1]),
stringsAsFactors = F) [,1]
View(GPL1)
exp2<-as.data.frame(exp2)
View(exp2)
exp2$ID<-rownames(exp2)
exp2_symbol<-merge(exp2,gpl1,by = "ID")
exp2_symbol<-na.omit(exp2_symbol)
table(duplicated(exp2_symbol$`Gene symbol`))
exp2_unique<-avereps(exp2_symbol[,-c(1,ncol(exp1_symbol))], ID = exp1_symbol$`Gene symbol`)
table(duplicated(rownames(exp1_unique)))
save(exp2, exp2_symbol,exp2_unique, GPL1, gpl1, gse, group, Clinfo1,file = "GSE18290_GPL2112.Rdata")
exp2$ID<-rownames(exp2)
exp2_symbol<-merge(exp2,gpl1,by = "ID")
exp2_symbol<-na.omit(exp2_symbol)
table(duplicated(exp2_symbol$`Gene symbol`))
exp2_unique<-avereps(exp2_symbol[,-c(1,ncol(exp2_symbol))], ID = exp2_symbol$`Gene symbol`)
table(duplicated(rownames(exp2_unique)))
save(exp2, exp2_symbol,exp2_unique, GPL1, gpl1, gse, group, Clinfo1,file = "GSE18290_GPL2112.Rdata")
options(stringsAsFactors = F)
Sys.setenv("VROOM_CONNECTION_SIZE"=131702*600)
library(GEOquery)
library(limma)
library(affy)
gse<-getGEO("GSE18290",destdir = ".",
getGPL = T,
AnnotGPL =T)
gse[[2]]
exp2<-exprs(gse[[2]])
Clinfo1<-pData(gse[[]])
group<-c(rep("aoocyte",2), rep("bonecell",2), rep("ctwocell",2), rep("dfourcell",2),
rep("eightcell",2), rep("fsixteencell",2),rep("gmorula",2), rep("hblast",2))
GPL1<-fData(gse[[2]])
gpl1<-GPL1[,c(1,3)]
gpl1$"Gene symbol" <-data.frame(sapply(gpl1$"Gene symbol", function(x)unlist(strsplit(x, "///"))[1]),
stringsAsFactors = F) [,1]
exp2<-as.data.frame(exp2)
exp2$ID<-rownames(exp2)
exp2_symbol<-merge(exp2,gpl1,by = "ID")
exp2_symbol<-na.omit(exp2_symbol)
table(duplicated(exp2_symbol$`Gene symbol`))
exp2_unique<-avereps(exp2_symbol[,-c(1,ncol(exp2_symbol))], ID = exp2_symbol$`Gene symbol`)
table(duplicated(rownames(exp2_unique)))
save(exp2, exp2_symbol,exp2_unique, GPL1, gpl1, gse, group, Clinfo1,file = "GSE18290_GPL2112.Rdata")
save(exp2, exp2_symbol,exp2_unique, GPL1, gpl1, gse, group, Clinfo2,file = "GSE18290_GPL2112.Rdata")
Clinfo2<-pData(gse[[2]])
save(exp2, exp2_symbol,exp2_unique, GPL1, gpl1, gse, group, Clinfo2,file = "GSE18290_GPL2112.Rdata")
load("GSE18290_GPL2112.Rdata")
boxplot(exp1_unique)
options (stringsAsFactors = F)
library(limma)
boxplot(exp1_unique)
load("GSE18290_GPL2112.Rdata")
boxplot(exp1_unique)
load("GSE18290_GPL2112.Rdata")
boxplot(exp1_unique)
library(limma)
load("GSE18290_GPL2112.Rdata")
boxplot(exp2_unique)
options (stringsAsFactors = F)
library(limma)
View(vsn.qmouse)
load("~/Bioinfo/2022-topic-04-team-04/project/GSE18290_GPL2112.Rdata")
table(duplicated(rownames(exp2_unique)))
table(duplicated(rownames(exp2_unique)))
View(exp2_symbol)
View(GPL1)
View(exp2)
View(Clinfo2)
design<-model.matrix(~0+factor(group))
colnames(design)<-levels(factor(group))
rownames(design)<-colnames(exp1_unique)
rownames(design)<-colnames(exp2_unique)
design<-model.matrix(~0+factor(group))
colnames(design)<-levels(factor(group))
rownames(design)<-colnames(exp2_unique)
library(limma)
design<-model.matrix(~0+factor(group))
colnames(design)<-levels(factor(group))
rownames(design)<-colnames(exp2_unique)
dimnames[1]
dimnames(exp2_unique[1])
design<-model.matrix(~0+factor(group))
colnames(design)<-levels(factor(group))
rownames(design)<-colnames(exp2_unique)
#download data and ID conversion
options(stringsAsFactors = F)
Sys.setenv("VROOM_CONNECTION_SIZE"=131702*600)
library(GEOquery)
library(limma)
library(affy)
gse<-getGEO("GSE18290",destdir = ".",
getGPL = T,
AnnotGPL =T)
gse[[2]]
exp2<-exprs(gse[[2]])
Clinfo2<-pData(gse[[2]])
group<-c(rep("aoocyte",2), rep("bonecell",2), rep("ctwocell",2), rep("dfourcell",2),
rep("eightcell",2), rep("fsixteencell",2),rep("gmorula",2), rep("hblast",2))
GPL1<-fData(gse[[2]])
gpl1<-GPL1[,c(1,3)]
gpl1$"Gene symbol" <-data.frame(sapply(gpl1$"Gene symbol", function(x)unlist(strsplit(x, "///"))[1]),
stringsAsFactors = F) [,1]
exp2<-as.data.frame(exp2)
exp2$ID<-rownames(exp2)
exp2_symbol<-merge(exp2,gpl1,by = "ID")
exp2_symbol<-na.omit(exp2_symbol)
table(duplicated(exp2_symbol$`Gene symbol`))
exp2_unique<-avereps(exp2_symbol[,-c(1,ncol(exp2_symbol))], ID = exp2_symbol$`Gene symbol`)
table(duplicated(rownames(exp2_unique)))
save(exp2, exp2_symbol,exp2_unique, GPL1, gpl1, gse, group, Clinfo2,file = "GSE18290_GPL2112.Rdata")
load("GSE18290_GPL2112.Rdata")
boxplot(exp2_unique)
options (stringsAsFactors = F)
library(limma)
# expression matrix, design matrix, contrast matrix
# design matrix
design<-model.matrix(~0+factor(group))
colnames(design)<-levels(factor(group))
rownames(design)<-colnames(exp2_unique)
#contrast matrix"
contrast.matrix<-makeContrasts(blast-onecell, blast-twocell, blast-fourcell, blast-eightcell,
blast-sixteencell, blast-morula, levels = design1 )
contrast.matrix
contrast.matrix<-makeContrasts(blast-onecell, blast-twocell, blast-fourcell, blast-eightcell,
blast-sixteencell, blast-morula, levels = design )
contrast.matrix
#contrast matrix"
contrast.matrix<-makeContrasts(blast-onecell, blast-twocell, blast-fourcell, blast-eightcell,
blast-sixteencell, blast-morula, levels = design )
?blast
??blast
View(exp2_unique)
library(pheatmap)
pheatmap(exp2_unique)
pheatmap(exp2_unique [1:50,])
pheatmap(exp2_unique [1:50,], fontsize = 7)
pheatmap(exp2_unique [1:50,], fontsize = 7, fontsize_row = fontsize)
pheatmap(exp2_unique [1:50,], fontsize = 7, fontsize_row = 5)
pheatmap(exp2_unique [1:50,], fontsize = 7, fontsize_row = 1)
pheatmap(exp2_unique [1:50,], fontsize = 7, fontsize_row = 3)
pheatmap(exp2_unique [1:50,], fontsize = 7, fontsize_row = 2)
projectPath <- dirname(rstudioapi::getSourceEditorContext()$path)
library(GEOquery)
library(limma)
library(affy)
gse<-getGEO("GSE18290",destdir = ".",
getGPL = T,
AnnotGPL =T)
library(GEOquery)
library(limma)
library(affy)
gse<-getGEO("GSE18290",destdir = ".",
getGPL = T,
AnnotGPL =T)
library(GEOquery)
library(limma)
library(affy)
gse<-getGEO("GSE18290",destdir = ".",
getGPL = T,
AnnotGPL =T)
gse[[2]]
exp2<-exprs(gse[[2]])
Clinfo2<-pData(gse[[2]])
group<-c(rep("aoocyte",2), rep("bonecell",2), rep("ctwocell",2), rep("dfourcell",2),
rep("eightcell",2), rep("fsixteencell",2),rep("gmorula",2), rep("hblast",2))
GPL1<-fData(gse[[2]])
gpl1<-GPL1[,c(1,3)]
gpl1$"Gene symbol" <-data.frame(sapply(gpl1$"Gene symbol", function(x)unlist(strsplit(x, "///"))[1]),
stringsAsFactors = F) [,1]
exp2<-as.data.frame(exp2)
exp2$ID<-rownames(exp2)
exp2_symbol<-merge(exp2,gpl1,by = "ID")
exp2_symbol<-na.omit(exp2_symbol)
table(duplicated(exp2_symbol$`Gene symbol`))
exp2_unique<-avereps(exp2_symbol[,-c(1,ncol(exp2_symbol))], ID = exp2_symbol$`Gene symbol`)
table(duplicated(rownames(exp2_unique)))
save(exp2, exp2_symbol,exp2_unique, GPL1, gpl1, gse, group, Clinfo2,file = "GSE18290_GPL2112.Rdata")
gse<-getGEO("GSE18290",destdir = ".",
getGPL = T,
AnnotGPL =T)
exp2<-exprs(gse[[2]])
Clinfo2<-pData(gse[[2]])
group<-c(rep("aoocyte",2), rep("bonecell",2), rep("ctwocell",2), rep("dfourcell",2),
rep("eightcell",2), rep("fsixteencell",2),rep("gmorula",2), rep("hblast",2))
GPL1<-fData(gse[[2]])
gpl1<-GPL1[,c(1,3)]
gpl1$"Gene symbol" <-data.frame(sapply(gpl1$"Gene symbol", function(x)unlist(strsplit(x, "///"))[1]),
stringsAsFactors = F) [,1]
exp2<-as.data.frame(exp2)
exp2$ID<-rownames(exp2)
exp2_symbol<-merge(exp2,gpl1,by = "ID")
exp2_symbol<-na.omit(exp2_symbol)
table(duplicated(exp2_symbol$`Gene symbol`))
exp2_unique<-avereps(exp2_symbol[,-c(1,ncol(exp2_symbol))], ID = exp2_symbol$`Gene symbol`)
table(duplicated(rownames(exp2_unique)))
save(exp2, exp2_symbol,exp2_unique, GPL1, gpl1, gse, group, Clinfo2,file = "GSE18290_GPL2112.Rdata")
pheatmap(exp2_unique [1:50,], fontsize_row = 2)
pheatmap(exp2_unique [1:50,], fontsize_row = 2.5)
pheatmap(exp2_unique [1:50,], fontsize_row = 4)
